@model Capstone.Web.Models.Table

@{
    ViewBag.Title = "Table";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <script src="/Scripts/HandSetupJavaScript.js"></script>

        List<bool> discardList = new List<bool>() { false, false, false, false, false };
    }

<section>
    <h2>@Model.Name</h2>

    <div id="otherPlayersFields">
        @foreach (var seat in Model.Seats)
        {
            if (seat.Username.ToLower() != Session["username"].ToString().ToLower())
            {
                <div>

                    @if (seat.Occupied && seat.IsTurn)
                    {
                        <p id="currentPlayer">@seat.Username</p>
                    }
                    else
                    {
                        <p>@seat.Username</p>
                    }
                    <p>@seat.TableBalance.ToString("C")</p>
                </div>
            }
        }
    </div>

    @using (Html.BeginForm("updatePlayerTurn", "Game", FormMethod.Post)) //updatePlayerTurn
    {
        for (int i = 0; i < Model.Seats.Count; i++)
        {
            if (Model.Seats[i].Username.ToLower() == Session["username"].ToString().ToLower())
            {
                <div id="currentUserPlayField">
                    @if (Model.Seats[i].Occupied && Model.Seats[i].IsTurn)
                    {
                        <p id="currentPlayer">@Model.Seats[i].Username</p>
                    }
                    else
                    {
                        <p>@Model.Seats[i].Username</p>
                    }
                    <p>@Model.Seats[i].TableBalance.ToString("C")</p>


                    @for (int j = 0; j < 5; j++)
                    {

                        if (Model.Seats[i].Hand.MyHand[j].Suit == "diamonds" || Model.Seats[i].Hand.MyHand[j].Suit == "hearts")
                        {
                            <div data-suit="@Model.Seats[i].Hand.MyHand[j].Suit" data-number="@Model.Seats[i].Hand.MyHand[j].Number" class="playingCard red">
                                @*@Html.Hidden("isDiscard", card.Discard, new { @class = "shouldDiscard" })*@
                                @Html.HiddenFor(c => c.Seats[i].Hand.MyHand[j].Discard, new { @class = "shouldDiscard" })
                                <p>@Model.Seats[i].Hand.MyHand[j].ConvertedNumber @Model.Seats[i].Hand.MyHand[j].SuitLetter</p>
                            </div>
                        }
                        else
                        {
                            <div  data-suit="@Model.Seats[i].Hand.MyHand[j].Suit" data-number="@Model.Seats[i].Hand.MyHand[j].Number" class="playingCard black">
                                @*@Html.Hidden("isDiscard", Model.Seats[i].Hand.MyHand[j].Discard, new { @class = "shouldDiscard" })*@
                                @Html.HiddenFor(c => c.Seats[i].Hand.MyHand[j].Discard, new { @class = "shouldDiscard" })
                                <p>@Model.Seats[i].Hand.MyHand[j].ConvertedNumber @Model.Seats[i].Hand.MyHand[j].SuitLetter</p>
                            </div>
                        }


                    }
                    @if (Model.Seats[i].Occupied && Model.Seats[i].IsTurn)
                    {
                        <p>Gonna Do Stuff Here</p>
                    }
                </div>
            }
        }

        <button>Advance</button>

    }

    @using (Html.BeginForm("ReplaceCards", "Game", FormMethod.Post))
    {


        //Capstone.Web.Models.Card c = new Capstone.Web.Models.Card();
        //Capstone.Web.Models.Card c2 = new Capstone.Web.Models.Card();
        //c.Discard = "true";
        //c2.Discard = "false";

        //Capstone.Web.Models.Hand h = new Capstone.Web.Models.Hand();
        //h.MyHand = new List<Capstone.Web.Models.Card>();
        //h.MyHand.Add(c);
        //h.MyHand.Add(c2);

        //Capstone.Web.Models.Seat s = new Capstone.Web.Models.Seat();
        ////s.Hand = new Capstone.Web.Models.Hand();
        //s.Hand = h;

        //List<Capstone.Web.Models.Seat> ls = new List<Capstone.Web.Models.Seat>();

        //ls.Add(s);

        @Html.HiddenFor(m => m.TableID)
        @Html.Hidden("Username", (string)Session["Username"])
        @Html.Hidden("Suit")
        @Html.Hidden("Number")
        
        @*
        foreach (var seat in Model.Seats)
        {
            if (seat.Username == Session["username"].ToString())
            {
                <div>
                    @Html.HiddenFor(m => m.Seats[0], s);
                </div>
            }
        }
        *@
        <button>Discard</button>
    }
</section>

